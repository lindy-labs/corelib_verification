import CorelibVerification.Corelib.Pedersen
import CorelibVerification.Corelib.Starknet.ContractAddress
import CorelibVerification.Corelib.Metaprogramming

namespace Aegis

aegis_spec "core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>::update_state" :=
  fun m _ hs a _ ρ =>
  ρ = m.pedersen hs a.cast

aegis_prove "core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>::update_state" :=
  fun m _ hs a _ ρ => by
  unfold «spec_core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>::update_state»
  rintro rfl
  rfl

aegis_spec "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, core::starknet::contract_address::ContractAddress, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>>::update_with" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen a b.cast

aegis_prove "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, core::starknet::contract_address::ContractAddress, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>>::update_with" :=
  fun _ _ a b _ ρ => by
  rintro rfl
  rfl

aegis_spec "core::hash::LegacyHashForHash::<core::starknet::contract_address::ContractAddress, core::hash::into_felt252_based::HashImpl::<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>>::hash" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen a b.cast

aegis_prove "core::hash::LegacyHashForHash::<core::starknet::contract_address::ContractAddress, core::hash::into_felt252_based::HashImpl::<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>>::hash" :=
  fun m _ a b _ ρ => by
  rintro rfl
  rfl

aegis_spec "core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>::update_state" :=
  fun m _ hs a _ ρ =>
  ρ = m.pedersen hs a.toFelt

aegis_prove "core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>::update_state" :=
  fun m _ hs a _ ρ => by
  rintro rfl
  rfl

aegis_spec "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, core::integer::u32, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>>::update_with" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen a b.toFelt

aegis_prove "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, core::integer::u32, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>>::update_with" :=
  fun m _ a b _ ρ => by
  rintro rfl
  rfl

aegis_spec "core::hash::LegacyHashForHash::<core::integer::u32, core::hash::into_felt252_based::HashImpl::<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>>::hash" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen a b.toFelt

aegis_prove "core::hash::LegacyHashForHash::<core::integer::u32, core::hash::into_felt252_based::HashImpl::<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>>::hash" :=
  fun m _ a b _ ρ => by
  rintro rfl
  rfl

aegis_spec "core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>::update_state" :=
  fun m _ hs a _ ρ =>
  ρ = m.pedersen hs a.toFelt

aegis_prove "core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>::update_state" :=
  fun m _ hs a _ ρ => by
  rintro rfl
  rfl

aegis_spec "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, core::integer::u64, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>>::update_with" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen a b.toFelt

aegis_prove "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, core::integer::u64, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>>::update_with" :=
  fun m _ a b _ ρ => by
  rintro rfl
  rfl

aegis_spec "core::hash::LegacyHashForHash::<core::integer::u64, core::hash::into_felt252_based::HashImpl::<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>>::hash" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen a b.toFelt

aegis_prove "core::hash::LegacyHashForHash::<core::integer::u64, core::hash::into_felt252_based::HashImpl::<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>>::hash" :=
  fun m _ a b _ ρ => by
  rintro rfl
  rfl

aegis_spec "core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>::update_state" :=
  fun _ a _ ρ =>
  ρ = a

aegis_prove "core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>::update_state" :=
  fun m a _ ρ => by
  rintro rfl
  rfl

aegis_spec "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (), core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>>::update_with" :=
  fun _ a _ ρ =>
  ρ = a

aegis_prove "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (), core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>>::update_with" :=
  fun m a b ρ => by
  rintro rfl
  rfl

aegis_spec "core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>::update_state" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen a b.toFelt

aegis_prove "core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>::update_state" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>::update_state»
  aesop

aegis_spec "core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>::update_state" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen a b.cast

aegis_prove "core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>::update_state" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>::update_state»
  aesop

aegis_spec "core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>::update_state" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen a b.toFelt

aegis_prove "core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>::update_state" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>::update_state»
  aesop

aegis_spec "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::integer::u32), core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>>::update_with" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen a b.toFelt

aegis_prove "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::integer::u32), core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>>::update_with" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::integer::u32), core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>>::update_with»
  aesop

aegis_spec "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::starknet::contract_address::ContractAddress), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>>::update_with" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen a b.cast

aegis_prove "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::starknet::contract_address::ContractAddress), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>>::update_with" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::starknet::contract_address::ContractAddress), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>>::update_with»
  aesop

aegis_spec "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::integer::u64), core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>>::update_with" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen a b.toFelt

aegis_prove "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::integer::u64), core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>>::update_with" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::integer::u64), core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>>::update_with»
  aesop

aegis_spec "core::hash::TupleNextHash<(core::integer::u32, core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u32), core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::metaprogramming::IsTupleTupleSize1<core::integer::u32>, core::integer::u32Drop, core::traits::TupleSize0Drop>>::update_state" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen (m.pedersen a b.1.toFelt) b.2.toFelt

aegis_prove "core::hash::TupleNextHash<(core::integer::u32, core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u32), core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::metaprogramming::IsTupleTupleSize1<core::integer::u32>, core::integer::u32Drop, core::traits::TupleSize0Drop>>::update_state" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::TupleNextHash<(core::integer::u32, core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u32), core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::metaprogramming::IsTupleTupleSize1<core::integer::u32>, core::integer::u32Drop, core::traits::TupleSize0Drop>>::update_state»
  aesop

aegis_spec "core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::starknet::contract_address::ContractAddress), core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::metaprogramming::IsTupleTupleSize1<core::starknet::contract_address::ContractAddress>, core::starknet::contract_address::ContractAddressDrop, core::traits::TupleSize0Drop>>::update_state" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen (m.pedersen a b.1.cast) b.2.cast

aegis_prove "core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::starknet::contract_address::ContractAddress), core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::metaprogramming::IsTupleTupleSize1<core::starknet::contract_address::ContractAddress>, core::starknet::contract_address::ContractAddressDrop, core::traits::TupleSize0Drop>>::update_state" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::starknet::contract_address::ContractAddress), core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::metaprogramming::IsTupleTupleSize1<core::starknet::contract_address::ContractAddress>, core::starknet::contract_address::ContractAddressDrop, core::traits::TupleSize0Drop>>::update_state»
  aesop

aegis_spec "core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>::update_state" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen (m.pedersen a b.1.cast) b.2.toFelt

aegis_prove "core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>::update_state" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>::update_state»
  aesop

aegis_spec "core::hash::TupleNextHash<(core::integer::u32, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>::update_state" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen (m.pedersen a b.1.toFelt) b.2.toFelt

aegis_prove "core::hash::TupleNextHash<(core::integer::u32, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>::update_state" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::TupleNextHash<(core::integer::u32, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>::update_state»
  aesop

aegis_spec "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::integer::u32, core::integer::u32), core::hash::TupleNextHash<(core::integer::u32, core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u32), core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::metaprogramming::IsTupleTupleSize1<core::integer::u32>, core::integer::u32Drop, core::traits::TupleSize0Drop>>>::update_with" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen (m.pedersen a b.1.toFelt) b.2.toFelt

aegis_prove "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::integer::u32, core::integer::u32), core::hash::TupleNextHash<(core::integer::u32, core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u32), core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::metaprogramming::IsTupleTupleSize1<core::integer::u32>, core::integer::u32Drop, core::traits::TupleSize0Drop>>>::update_with" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::integer::u32, core::integer::u32), core::hash::TupleNextHash<(core::integer::u32, core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u32), core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::metaprogramming::IsTupleTupleSize1<core::integer::u32>, core::integer::u32Drop, core::traits::TupleSize0Drop>>>::update_with»
  aesop

aegis_spec "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::starknet::contract_address::ContractAddress), core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::metaprogramming::IsTupleTupleSize1<core::starknet::contract_address::ContractAddress>, core::starknet::contract_address::ContractAddressDrop, core::traits::TupleSize0Drop>>>::update_with" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen (m.pedersen a b.1.cast) b.2.cast

aegis_prove "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::starknet::contract_address::ContractAddress), core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::metaprogramming::IsTupleTupleSize1<core::starknet::contract_address::ContractAddress>, core::starknet::contract_address::ContractAddressDrop, core::traits::TupleSize0Drop>>>::update_with" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::starknet::contract_address::ContractAddress), core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::metaprogramming::IsTupleTupleSize1<core::starknet::contract_address::ContractAddress>, core::starknet::contract_address::ContractAddressDrop, core::traits::TupleSize0Drop>>>::update_with»
  aesop

aegis_spec "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::starknet::contract_address::ContractAddress, core::integer::u64), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>>::update_with" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen (m.pedersen a b.1.cast) b.2.toFelt

aegis_prove "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::starknet::contract_address::ContractAddress, core::integer::u64), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>>::update_with" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::starknet::contract_address::ContractAddress, core::integer::u64), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>>::update_with»
  aesop

aegis_spec "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::integer::u32, core::integer::u64), core::hash::TupleNextHash<(core::integer::u32, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>>::update_with" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen (m.pedersen a b.1.toFelt) b.2.toFelt

aegis_prove "core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::integer::u32, core::integer::u64), core::hash::TupleNextHash<(core::integer::u32, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>>::update_with" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::HashStateEx<core::pedersen::HashState, core::pedersen::HashStateImpl, (core::integer::u32, core::integer::u64), core::hash::TupleNextHash<(core::integer::u32, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>>::update_with»
  aesop

aegis_spec "core::hash::LegacyHashForHash<(core::integer::u32, core::integer::u32), core::hash::TupleNextHash<(core::integer::u32, core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u32), core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::metaprogramming::IsTupleTupleSize1<core::integer::u32>, core::integer::u32Drop, core::traits::TupleSize0Drop>>>::hash" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen (m.pedersen a b.1.toFelt) b.2.toFelt

aegis_prove "core::hash::LegacyHashForHash<(core::integer::u32, core::integer::u32), core::hash::TupleNextHash<(core::integer::u32, core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u32), core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::metaprogramming::IsTupleTupleSize1<core::integer::u32>, core::integer::u32Drop, core::traits::TupleSize0Drop>>>::hash" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::LegacyHashForHash<(core::integer::u32, core::integer::u32), core::hash::TupleNextHash<(core::integer::u32, core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u32), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u32), core::metaprogramming::TupleSplitTupleSize1<core::integer::u32>, core::metaprogramming::IsTupleTupleSize1<core::integer::u32>, core::integer::u32Drop, core::traits::TupleSize0Drop>>>::hash»
  aesop

aegis_spec "core::hash::LegacyHashForHash<(core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::starknet::contract_address::ContractAddress), core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::metaprogramming::IsTupleTupleSize1<core::starknet::contract_address::ContractAddress>, core::starknet::contract_address::ContractAddressDrop, core::traits::TupleSize0Drop>>>::hash" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen (m.pedersen a b.1.cast) b.2.cast

aegis_prove "core::hash::LegacyHashForHash<(core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::starknet::contract_address::ContractAddress), core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::metaprogramming::IsTupleTupleSize1<core::starknet::contract_address::ContractAddress>, core::starknet::contract_address::ContractAddressDrop, core::traits::TupleSize0Drop>>>::hash" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::LegacyHashForHash<(core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::starknet::contract_address::ContractAddress), core::metaprogramming::TupleSplitTupleSize1<core::starknet::contract_address::ContractAddress>, core::metaprogramming::IsTupleTupleSize1<core::starknet::contract_address::ContractAddress>, core::starknet::contract_address::ContractAddressDrop, core::traits::TupleSize0Drop>>>::hash»
  aesop

aegis_spec "core::hash::LegacyHashForHash<(core::starknet::contract_address::ContractAddress, core::integer::u64), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>>::hash" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen (m.pedersen a b.1.cast) b.2.toFelt

aegis_prove "core::hash::LegacyHashForHash<(core::starknet::contract_address::ContractAddress, core::integer::u64), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>>::hash" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::LegacyHashForHash<(core::starknet::contract_address::ContractAddress, core::integer::u64), core::hash::TupleNextHash<(core::starknet::contract_address::ContractAddress, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::starknet::contract_address::ContractAddress, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::starknet::contract_address::ContractAddress, core::pedersen::HashState, core::starknet::contract_address::ContractAddressIntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>>::hash»
  aesop

aegis_spec "core::hash::LegacyHashForHash<(core::integer::u32, core::integer::u64), core::hash::TupleNextHash<(core::integer::u32, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>>::hash" :=
  fun m _ a b _ ρ =>
  ρ = m.pedersen (m.pedersen a b.1.toFelt) b.2.toFelt

aegis_prove "core::hash::LegacyHashForHash<(core::integer::u32, core::integer::u64), core::hash::TupleNextHash<(core::integer::u32, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>>::hash" :=
  fun m _ a b _ ρ => by
  unfold «spec_core::hash::LegacyHashForHash<(core::integer::u32, core::integer::u64), core::hash::TupleNextHash<(core::integer::u32, core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize2<core::integer::u32, core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u32, core::pedersen::HashState, core::integer::U32IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleNextHash<(core::integer::u64), core::pedersen::HashState, core::pedersen::HashStateImpl, core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::hash::into_felt252_based::HashImpl<core::integer::u64, core::pedersen::HashState, core::integer::U64IntoFelt252, core::pedersen::HashStateImpl, core::pedersen::HashStateDrop>, core::hash::TupleSize0Hash<core::pedersen::HashState, core::pedersen::HashStateImpl>, core::traits::TupleSize0Drop>, core::traits::TupleNextDrop<(core::integer::u64), core::metaprogramming::TupleSplitTupleSize1<core::integer::u64>, core::metaprogramming::IsTupleTupleSize1<core::integer::u64>, core::integer::u64Drop, core::traits::TupleSize0Drop>>>::hash»
  aesop
